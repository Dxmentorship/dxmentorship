---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { AstroSeo } from '@astrolib/seo';

export async function getStaticPaths() {
  const menteeEntries = await getCollection('cohort-4');

  return menteeEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;

const { Content } = await entry.render();
---

<AstroSeo
  title={`${entry.data.name} - DXMentorship Cohort ${entry.data.cohort}`}
  description={`${entry.data.name} is a mentee in Cohort ${entry.data.cohort} of the DXMentorship program.`}
  canonical="https://www.dxmentorship.com"
  openGraph={{
    url: 'https://www.dxmentorship.com',
    title: `${entry.data.name} - DXMentorship Cohort ${entry.data.cohort}`,
    description: entry.data.currentStatus || `${entry.data.name} is a mentee in Cohort ${entry.data.cohort}`,
    images: [
      {
        url: entry.data.image,
        width: 1200,
        height: 630,
        alt: `${entry.data.name}'s profile picture`,
        type: 'image/jpeg',
      },
      {
        url: entry.data.image,
        width: 4096,
        height: 4096,
        alt: `${entry.data.name}'s profile picture`,
        type: 'image/jpeg',
      },
      { url: entry.data.image },
      { url: entry.data.image },
    ],
    site_name: 'DXMentorship',
  }}
  twitter={{
    handle: '@dxmentorship',
    site: '@site',
    cardType: 'summary_large_image',
  }}
/>
<BaseLayout>
  <div class="relative bg-vulcan-900">
    <div class="mx-auto max-w-7xl lg:grid lg:grid-cols-12 lg:gap-x-8 lg:px-8">
      <div class="lg:col-span-5 lg:-mr-8 xl:absolute xl:inset-0 xl:left-1/2 xl:mr-0">
        <div class="w-full bg-vulcan-800 object-cover lg:absolute lg:inset-0 lg:aspect-auto lg:h-full">
          <div class="flex items-center justify-center h-full">
            <img
              class="w-1/2 mt-32 h-auto rounded-md shadow-lg object-cover"
              src={entry.data.image}
              alt={entry.data.name}
            />
          </div>
        </div>
      </div>
      <div
        class="px-6 pb-24 pt-10 sm:pb-32 lg:col-span-7 lg:px-0 lg:pb-56 lg:pt-48 xl:col-span-6 lg:flex lg:flex-row-reverse"
      >
        <div class="mx-auto max-w-2xl lg:mx-0">
          <div class="hidden sm:mt-32 sm:flex lg:mt-16">
            <div
              class="relative rounded-full px-3 py-1 text-sm leading-6 text-vulcan-300 ring-1 ring-white/10 hover:ring-white/20"
            >
              Cohort {entry.data.cohort} Mentee
            </div>
          </div>
          <h1 class="text-4xl font-bold tracking-tight text-white sm:mt-10 sm:text-6xl">
            {entry.data.name}
          </h1>
          <p class="mt-6 text-lg leading-8 text-vulcan-300">
            {entry.data.title}
          </p>
          {
            entry.data.goals && entry.data.goals.length > 0 && (
              <div class="mt-8">
                <h2 class="text-2xl font-bold text-white mb-4">Goals</h2>
                <ul class="space-y-2 text-vulcan-300">
                  {entry.data.goals.map((goal) => (
                    <li class="flex items-center">
                      <span class="text-indigo-400 mr-2 self-start">â€¢</span>
                      {goal}
                    </li>
                  ))}
                </ul>
              </div>
            )
          }
          {
            entry.data.currentStatus && (
              <div class="mt-8">
                <h2 class="text-2xl font-bold text-white mb-4">Current Status</h2>
                <p class="text-vulcan-300">{entry.data.currentStatus}</p>
              </div>
            )
          }
          <div class="mt-8 prose prose-invert max-w-none">
            <Content />
          </div>
          <div class="mt-10 flex items-center gap-x-3">
            {
              entry.data.twitter && (
                <a
                  href={entry.data.twitter}
                  class="rounded-md bg-blue-400 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-blue-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-400"
                >
                  X.com
                </a>
              )
            }
            {
              entry.data.github && (
                <a
                  href={entry.data.github}
                  class="rounded-md bg-vulcan-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-vulcan-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-vulcan-600"
                >
                  Github
                </a>
              )
            }
            {
              entry.data.linkedin && (
                <a
                  href={entry.data.linkedin}
                  class="rounded-md bg-blue-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-blue-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600"
                >
                  LinkedIn
                </a>
              )
            }
            {
              entry.data.website && (
                <a
                  href={entry.data.website}
                  class="rounded-md bg-purple-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600"
                >
                  Website
                </a>
              )
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</BaseLayout>
