---
import BaseLayout from '../../layouts/BaseLayout.astro';
// import BlogPost from '../../components/BlogPost.astro';
import EntriesOne from '../../components/entries/EntriesOne.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const allPosts = await getCollection('posts');
  const uniqueTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.data.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
  <section>
    <div class='max-w-7xl px-8 md:px-12 lg:px-32 mx-auto py-32 lg:py-36 relative'>
      <div>
        <p class='text-sm text-transparent uppercase bg-gradient-to-r from-indigo-300 to-indigo-400 bg-clip-text'>
          Tags categories
        </p><p class='mt-8 text-4xl font-normal tracking-tighter text-white sm:text-5xl'>
          Blog posts tagged with {tag}
        </p>
      </div>

      <ul class='flex flex-wrap gap-8 mt-12' role='list'>
        <a href={`/tags/${tag}`} class='relative'>
          <li
            class='flex items-center justify-center h-8 text-xs px-4 py-2 font-semibold text-white transition-all border rounded-lg bg-vulcan-900 hover:text-indigo-400 border-vulcan-700'
          >
            {tag}
          </li>
        </a>
        <a href='/blog'>
          <li
            class='flex items-center justify-center h-8 text-xs px-4 py-2 font-semibold bg-white text-indigo-400 transition-all border rounded-lg hover:bg-indigo-50'
          >
            clear filter
          </li>
        </a>
      </ul>

      <div class='py-24'>
        <ol class='grid grid-cols-1 gap-4 lg:grid-cols-3 sm:grid-cols-2' role='list'>
          {
            posts.map((post) => (
              <EntriesOne
                url={'/posts/' + post.slug}
                title={post.data.title}
                description={post.data.description}
                alt={post.data.title}
                pubDate={post.data.pubDate.toString().slice(0, 10)}
                author={post.data.author}
                image={post.data.image.url}
              />
            ))
          }
        </ol>
      </div>
    </div>
  </section>
</BaseLayout>
